{"_id":"change-emitter","_rev":"2-2c43e0a3fab22cda8ec085e40132844a","name":"change-emitter","description":"Listen for changes. Like an event emitter that only emits a single event type. Really tiny.","dist-tags":{"latest":"0.1.2"},"versions":{"0.1.1":{"name":"change-emitter","version":"0.1.1","description":"Listen for changes. Like an event emitter that only emits a single event type. Really tiny.","main":"lib/index.js","scripts":{"check":"eslint src","build":"babel src --out-dir lib","test":"ava","test:watch":"npm run test -- --watch","prepublish":"npm run check && npm run test && npm run build"},"keywords":["change","event","emitter"],"author":{"name":"Andrew Clark","email":"acdlite@me.com"},"license":"MIT","devDependencies":{"ava":"^0.14.0","babel-cli":"^6.8.0","babel-core":"^6.8.0","babel-preset-es2015":"^6.6.0","eslint":"^2.10.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.8.0","sinon":"^1.17.4"},"babel":{"presets":["es2015"]},"ava":{"babel":"inherit","files":["**/*-test.js"],"source":["**/*.js"],"require":["babel-register"]},"gitHead":"4d5bf956d2e83bd773270d7a95e631013fa0a3e3","_id":"change-emitter@0.1.1","_shasum":"f7aa64d3c841986bc2e8805491dce71d2bc11daf","_from":".","_npmVersion":"3.8.3","_nodeVersion":"5.10.1","_npmUser":{"name":"acdlite","email":"acdlite@me.com"},"dist":{"shasum":"f7aa64d3c841986bc2e8805491dce71d2bc11daf","tarball":"https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.1.tgz"},"maintainers":[{"name":"acdlite","email":"acdlite@me.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/change-emitter-0.1.1.tgz_1463283565401_0.5161002008244395"},"directories":{}},"0.1.2":{"name":"change-emitter","version":"0.1.2","description":"Listen for changes. Like an event emitter that only emits a single event type. Really tiny.","main":"lib/index.js","scripts":{"check":"eslint src","build":"babel src --out-dir lib","test":"ava","test:watch":"npm run test -- --watch","prepublish":"npm run check && npm run test && npm run build"},"keywords":["change","event","emitter"],"author":{"name":"Andrew Clark","email":"acdlite@me.com"},"license":"MIT","devDependencies":{"ava":"^0.14.0","babel-cli":"^6.8.0","babel-core":"^6.8.0","babel-preset-es2015":"^6.6.0","eslint":"^2.10.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.8.0","sinon":"^1.17.4"},"babel":{"presets":["es2015"]},"ava":{"babel":"inherit","files":["**/*-test.js"],"source":["**/*.js"],"require":["babel-register"]},"gitHead":"e595d67a640473564839473f1f8012bc6baba81c","_id":"change-emitter@0.1.2","_shasum":"6b88ca4d5d864e516f913421b11899a860aee8db","_from":".","_npmVersion":"3.8.3","_nodeVersion":"5.10.1","_npmUser":{"name":"acdlite","email":"acdlite@me.com"},"dist":{"shasum":"6b88ca4d5d864e516f913421b11899a860aee8db","tarball":"https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.2.tgz"},"maintainers":[{"name":"acdlite","email":"acdlite@me.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/change-emitter-0.1.2.tgz_1463283657363_0.28469334659166634"},"directories":{}}},"readme":"change-emitter\n==============\n\nListen for changes. Like an event emitter that only emits a single event type. Really tiny.\n\nI extracted this from Redux's `createStore()` because I found it to be useful in other contexts. Use it where you want the most minimal event subscription implementation possible.\n\n## Usage\n\n```js\nimport { createChangeEmitter } from 'change-emitter'\n\nconst emitter = createChangeEmitter()\n\n// Called `listen` instead of `subscribe` to avoid confusion with observable spec\nconst unlisten = emitter.listen((...args) => {\n  console.log(args)\n})\n\nemitter.log(1, 2, 3) // logs `[1, 2, 3]`\nunlisten()\nemitter.log(4, 5, 6) // doesn't log\n```\n\n## Larger example\n\nHere's a (partial) implementation of Redux's `createStore`:\n\n```js\nconst createStore = (reducer, initialState) => {\n  let state = initialState\n  const emitter = createChangeEmitter()\n\n  function subscribe(listener) {\n    return emitter.listen(listener)\n  }\n\n  function dispatch(action) {\n    state = reducer(state, action)\n    emitter.emit()\n    return action\n  }\n\n  function getState() {\n    return state\n  }\n\n  return {\n    subscribe,\n    dispatch,\n    getState\n  }\n}\n```\n","maintainers":[{"name":"acdlite","email":"acdlite@me.com"}],"time":{"modified":"2016-05-15T03:41:00.707Z","created":"2016-05-15T03:39:25.903Z","0.1.1":"2016-05-15T03:39:25.903Z","0.1.2":"2016-05-15T03:41:00.707Z"},"keywords":["change","event","emitter"],"author":{"name":"Andrew Clark","email":"acdlite@me.com"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"\"2LEK3QYCYZ3REV0F68GONHLVV\""}